=begin
#FriendlyScore Public API

#Public API for communication with FriendlyScore

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.17

=end

require 'spec_helper'
require 'json'

# Unit tests for FriendlyscoreClient::DataInputApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DataInputApi' do
  before do
    # run before each test
    @instance = FriendlyscoreClient::DataInputApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DataInputApi' do
    it 'should create an instance of DataInputApi' do
      expect(@instance).to be_instance_of(FriendlyscoreClient::DataInputApi)
    end
  end

  # unit tests for public_version_customers_customer_id_account_collections_post
  # Post bank account collection for given customer.
  # @param customer_id Customer ID
  # @param version 
  # @param [Hash] opts the optional parameters
  # @option opts [AccountInputCollection] :accounts_collection AccountInputCollection object
  # @return [nil]
  describe 'public_version_customers_customer_id_account_collections_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for public_version_customers_customer_id_balance_collections_post
  # Post bank balance collection for given customer and bank. This is an asynchronous endpoint.
  # @param customer_id Customer ID
  # @param version 
  # @param [Hash] opts the optional parameters
  # @option opts [BalanceInputCollection] :balances_collection BalanceInputCollection object
  # @return [DtnDataProcessingSummary]
  describe 'public_version_customers_customer_id_balance_collections_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for public_version_customers_customer_id_transaction_collections_post
  # Post bank transaction collection for given customer and bank. This is an asynchronous endpoint.
  # Transactions that have already been posted before will be skipped.
  # @param customer_id Customer ID
  # @param version 
  # @param [Hash] opts the optional parameters
  # @option opts [TransactionInputCollection] :transactions_collection TransactionInputCollection object
  # @return [DtnDataProcessingSummary]
  describe 'public_version_customers_customer_id_transaction_collections_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
