=begin
#FriendlyScore Public API

#Public API for communication with FriendlyScore

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.17

=end

require 'uri'

module FriendlyscoreClient
  class InvitationApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get invitations
    # @param version 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page Page (default is 1)
    # @option opts [Integer] :max_per_page Max results per page (deafult is 1000)
    # @option opts [Integer] :is_used 0|1
    # @option opts [Integer] :is_revoked 0|1
    # @option opts [Integer] :is_expired 0|1
    # @option opts [String] :customer_type Business|Personal
    # @option opts [String] :reference Customer reference
    # @return [CustomerInvitationCollection]
    def public_version_invitations_get(version, opts = {})
      data, _status_code, _headers = public_version_invitations_get_with_http_info(version, opts)
      data
    end

    # Get invitations
    # @param version 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page Page (default is 1)
    # @option opts [Integer] :max_per_page Max results per page (deafult is 1000)
    # @option opts [Integer] :is_used 0|1
    # @option opts [Integer] :is_revoked 0|1
    # @option opts [Integer] :is_expired 0|1
    # @option opts [String] :customer_type Business|Personal
    # @option opts [String] :reference Customer reference
    # @return [Array<(CustomerInvitationCollection, Fixnum, Hash)>] CustomerInvitationCollection data, response status code and response headers
    def public_version_invitations_get_with_http_info(version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InvitationApi.public_version_invitations_get ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InvitationApi.public_version_invitations_get"
      end
      # resource path
      local_var_path = '/public/{version}/invitations'.sub('{' + 'version' + '}', version.to_s)

      # query parameters
      query_params = {}
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?
      query_params[:'max_per_page'] = opts[:'max_per_page'] if !opts[:'max_per_page'].nil?
      query_params[:'is_used'] = opts[:'is_used'] if !opts[:'is_used'].nil?
      query_params[:'is_revoked'] = opts[:'is_revoked'] if !opts[:'is_revoked'].nil?
      query_params[:'is_expired'] = opts[:'is_expired'] if !opts[:'is_expired'].nil?
      query_params[:'customer_type'] = opts[:'customer_type'] if !opts[:'customer_type'].nil?
      query_params[:'reference'] = opts[:'reference'] if !opts[:'reference'].nil?

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['Bearer']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CustomerInvitationCollection')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InvitationApi#public_version_invitations_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Revoke an invitation
    # @param id Invitation&#39;s ID
    # @param version 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def public_version_invitations_id_revoke_patch(id, version, opts = {})
      public_version_invitations_id_revoke_patch_with_http_info(id, version, opts)
      nil
    end

    # Revoke an invitation
    # @param id Invitation&#39;s ID
    # @param version 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def public_version_invitations_id_revoke_patch_with_http_info(id, version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InvitationApi.public_version_invitations_id_revoke_patch ...'
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InvitationApi.public_version_invitations_id_revoke_patch"
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InvitationApi.public_version_invitations_id_revoke_patch"
      end
      # resource path
      local_var_path = '/public/{version}/invitations/{id}/revoke'.sub('{' + 'id' + '}', id.to_s).sub('{' + 'version' + '}', version.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['Bearer']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InvitationApi#public_version_invitations_id_revoke_patch\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Post new invitation
    # @param version 
    # @param [Hash] opts the optional parameters
    # @option opts [CustomerInvitationType] :body Init data
    # @return [CustomerInvitation]
    def public_version_invitations_post(version, opts = {})
      data, _status_code, _headers = public_version_invitations_post_with_http_info(version, opts)
      data
    end

    # Post new invitation
    # @param version 
    # @param [Hash] opts the optional parameters
    # @option opts [CustomerInvitationType] :body Init data
    # @return [Array<(CustomerInvitation, Fixnum, Hash)>] CustomerInvitation data, response status code and response headers
    def public_version_invitations_post_with_http_info(version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InvitationApi.public_version_invitations_post ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InvitationApi.public_version_invitations_post"
      end
      # resource path
      local_var_path = '/public/{version}/invitations'.sub('{' + 'version' + '}', version.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      auth_names = ['Bearer']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CustomerInvitation')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InvitationApi#public_version_invitations_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
