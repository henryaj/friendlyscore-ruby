=begin
#FriendlyScore Public API

#Public API for communication with FriendlyScore

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.17

=end

require 'uri'

module FriendlyscoreClient
  class DataInputApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Post bank account collection for given customer.
    # @param customer_id Customer ID
    # @param version 
    # @param [Hash] opts the optional parameters
    # @option opts [AccountInputCollection] :accounts_collection AccountInputCollection object
    # @return [nil]
    def public_version_customers_customer_id_account_collections_post(customer_id, version, opts = {})
      public_version_customers_customer_id_account_collections_post_with_http_info(customer_id, version, opts)
      nil
    end

    # Post bank account collection for given customer.
    # @param customer_id Customer ID
    # @param version 
    # @param [Hash] opts the optional parameters
    # @option opts [AccountInputCollection] :accounts_collection AccountInputCollection object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def public_version_customers_customer_id_account_collections_post_with_http_info(customer_id, version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DataInputApi.public_version_customers_customer_id_account_collections_post ...'
      end
      # verify the required parameter 'customer_id' is set
      if @api_client.config.client_side_validation && customer_id.nil?
        fail ArgumentError, "Missing the required parameter 'customer_id' when calling DataInputApi.public_version_customers_customer_id_account_collections_post"
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling DataInputApi.public_version_customers_customer_id_account_collections_post"
      end
      # resource path
      local_var_path = '/public/{version}/customers/{customer_id}/account_collections'.sub('{' + 'customer_id' + '}', customer_id.to_s).sub('{' + 'version' + '}', version.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'accounts_collection'])
      auth_names = ['Bearer']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DataInputApi#public_version_customers_customer_id_account_collections_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Post bank balance collection for given customer and bank. This is an asynchronous endpoint.
    # @param customer_id Customer ID
    # @param version 
    # @param [Hash] opts the optional parameters
    # @option opts [BalanceInputCollection] :balances_collection BalanceInputCollection object
    # @return [DtnDataProcessingSummary]
    def public_version_customers_customer_id_balance_collections_post(customer_id, version, opts = {})
      data, _status_code, _headers = public_version_customers_customer_id_balance_collections_post_with_http_info(customer_id, version, opts)
      data
    end

    # Post bank balance collection for given customer and bank. This is an asynchronous endpoint.
    # @param customer_id Customer ID
    # @param version 
    # @param [Hash] opts the optional parameters
    # @option opts [BalanceInputCollection] :balances_collection BalanceInputCollection object
    # @return [Array<(DtnDataProcessingSummary, Fixnum, Hash)>] DtnDataProcessingSummary data, response status code and response headers
    def public_version_customers_customer_id_balance_collections_post_with_http_info(customer_id, version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DataInputApi.public_version_customers_customer_id_balance_collections_post ...'
      end
      # verify the required parameter 'customer_id' is set
      if @api_client.config.client_side_validation && customer_id.nil?
        fail ArgumentError, "Missing the required parameter 'customer_id' when calling DataInputApi.public_version_customers_customer_id_balance_collections_post"
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling DataInputApi.public_version_customers_customer_id_balance_collections_post"
      end
      # resource path
      local_var_path = '/public/{version}/customers/{customer_id}/balance_collections'.sub('{' + 'customer_id' + '}', customer_id.to_s).sub('{' + 'version' + '}', version.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'balances_collection'])
      auth_names = ['Bearer']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DtnDataProcessingSummary')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DataInputApi#public_version_customers_customer_id_balance_collections_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Post bank transaction collection for given customer and bank. This is an asynchronous endpoint.
    # Transactions that have already been posted before will be skipped.
    # @param customer_id Customer ID
    # @param version 
    # @param [Hash] opts the optional parameters
    # @option opts [TransactionInputCollection] :transactions_collection TransactionInputCollection object
    # @return [DtnDataProcessingSummary]
    def public_version_customers_customer_id_transaction_collections_post(customer_id, version, opts = {})
      data, _status_code, _headers = public_version_customers_customer_id_transaction_collections_post_with_http_info(customer_id, version, opts)
      data
    end

    # Post bank transaction collection for given customer and bank. This is an asynchronous endpoint.
    # Transactions that have already been posted before will be skipped.
    # @param customer_id Customer ID
    # @param version 
    # @param [Hash] opts the optional parameters
    # @option opts [TransactionInputCollection] :transactions_collection TransactionInputCollection object
    # @return [Array<(DtnDataProcessingSummary, Fixnum, Hash)>] DtnDataProcessingSummary data, response status code and response headers
    def public_version_customers_customer_id_transaction_collections_post_with_http_info(customer_id, version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DataInputApi.public_version_customers_customer_id_transaction_collections_post ...'
      end
      # verify the required parameter 'customer_id' is set
      if @api_client.config.client_side_validation && customer_id.nil?
        fail ArgumentError, "Missing the required parameter 'customer_id' when calling DataInputApi.public_version_customers_customer_id_transaction_collections_post"
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling DataInputApi.public_version_customers_customer_id_transaction_collections_post"
      end
      # resource path
      local_var_path = '/public/{version}/customers/{customer_id}/transaction_collections'.sub('{' + 'customer_id' + '}', customer_id.to_s).sub('{' + 'version' + '}', version.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'transactions_collection'])
      auth_names = ['Bearer']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DtnDataProcessingSummary')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DataInputApi#public_version_customers_customer_id_transaction_collections_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
