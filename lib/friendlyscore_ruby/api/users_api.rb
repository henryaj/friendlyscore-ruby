=begin
#FriendlyScore Public API

#Public API for communication with FriendlyScore

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.17

=end

require 'uri'

module FriendlyscoreClient
  class UsersApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Returns the list of users. Can be used for seeking users.
    # @param version 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :by_user_reference Filter by user identifier from **your** database
    # @return [UserCollection]
    def public_version_customers_get(version, opts = {})
      data, _status_code, _headers = public_version_customers_get_with_http_info(version, opts)
      data
    end

    # Returns the list of users. Can be used for seeking users.
    # @param version 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :by_user_reference Filter by user identifier from **your** database
    # @return [Array<(UserCollection, Fixnum, Hash)>] UserCollection data, response status code and response headers
    def public_version_customers_get_with_http_info(version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: UsersApi.public_version_customers_get ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling UsersApi.public_version_customers_get"
      end
      # resource path
      local_var_path = '/public/{version}/customers'.sub('{' + 'version' + '}', version.to_s)

      # query parameters
      query_params = {}
      query_params[:'by-user-reference'] = opts[:'by_user_reference'] if !opts[:'by_user_reference'].nil?

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['Bearer']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'UserCollection')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: UsersApi#public_version_customers_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Creates a new \"empty\" user.
    # @param version 
    # @param [Hash] opts the optional parameters
    # @option opts [UserReferenceWithEntityType] :user_data Data to insert
    # @return [User]
    def public_version_customers_post(version, opts = {})
      data, _status_code, _headers = public_version_customers_post_with_http_info(version, opts)
      data
    end

    # Creates a new \&quot;empty\&quot; user.
    # @param version 
    # @param [Hash] opts the optional parameters
    # @option opts [UserReferenceWithEntityType] :user_data Data to insert
    # @return [Array<(User, Fixnum, Hash)>] User data, response status code and response headers
    def public_version_customers_post_with_http_info(version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: UsersApi.public_version_customers_post ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling UsersApi.public_version_customers_post"
      end
      # resource path
      local_var_path = '/public/{version}/customers'.sub('{' + 'version' + '}', version.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'user_data'])
      auth_names = ['Bearer']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'User')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: UsersApi#public_version_customers_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
